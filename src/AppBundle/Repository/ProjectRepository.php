<?php

namespace AppBundle\Repository;

use Doctrine\ORM\QueryBuilder;
use Youshido\GraphQL\Parser\Ast\Field;
use Youshido\GraphQL\Parser\Ast\Query;

/**
 * ProjectRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjectRepository extends \Doctrine\ORM\EntityRepository
{
    const PROCESS_FIELDS = ['startDate', 'endDate', 'budget', 'hours'];

    /**
     * @param Field[] $fields
     * @param QueryBuilder $queryBuilder
     * @param string $alias
     *
     * @return QueryBuilder
     */
    public function addFields(array $fields, QueryBuilder $queryBuilder, $alias = 'entity')
    {
        $processAlias = $alias . 'Process';
        $queryBuilder->leftJoin($alias . '.processes', $processAlias);

        foreach ($fields as $index => $field) {
            if ($field instanceof Query) {
                continue;
            }

            $fieldAlias = in_array($field->getName(), self::PROCESS_FIELDS) ? $processAlias : $alias;
            $fieldName = $fieldAlias . '.' . $field->getName();
            if ($index === 0) {
                $queryBuilder->select($fieldName);

                continue;
            }

            $queryBuilder->addSelect($fieldName);
        }

        return $queryBuilder;
    }

    public function whereId($id, QueryBuilder $queryBuilder, $alias = 'entity')
    {
        return $queryBuilder->where($alias . '.id = ' . $id);
    }

    public function whereTitle($title, QueryBuilder $queryBuilder, $alias = 'entity')
    {
        $attribute = uniqid('title', true);

        return $queryBuilder
            ->where($alias . '.title LIKE :' . $attribute)
            ->setParameter($attribute, '%' . $title . '%');
    }
}
